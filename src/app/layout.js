'use client'

import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import * as React from 'react';
import { styled, useTheme } from '@mui/material/styles';
import Box from '@mui/material/Box';
import MuiDrawer from '@mui/material/Drawer';
import MuiAppBar from '@mui/material/AppBar';
import Toolbar from '@mui/material/Toolbar';
import List from '@mui/material/List';
import CssBaseline from '@mui/material/CssBaseline';
import Typography from '@mui/material/Typography';
import Divider from '@mui/material/Divider';
import IconButton from '@mui/material/IconButton';
import MenuIcon from '@mui/icons-material/Menu';
import ChevronLeftIcon from '@mui/icons-material/ChevronLeft';
import ChevronRightIcon from '@mui/icons-material/ChevronRight';
import ListItem from '@mui/material/ListItem';
import ListItemButton from '@mui/material/ListItemButton';
import ListItemIcon from '@mui/material/ListItemIcon';
import ListItemText from '@mui/material/ListItemText';
import InboxIcon from '@mui/icons-material/MoveToInbox';
import MailIcon from '@mui/icons-material/Mail';
import Link from "next/link";
import { useMediaQuery } from '@mui/material';
import DashboardIcon from '@mui/icons-material/Dashboard';
import AddToPhotosIcon from '@mui/icons-material/AddToPhotos';
import ListIcon from '@mui/icons-material/List';
import CategoryIcon from '@mui/icons-material/Category';
import LiveHelpIcon from '@mui/icons-material/LiveHelp';
const drawerWidth = 240;

const openedMixin = (theme) => ({
  width: drawerWidth,
  transition: theme.transitions.create('width', {
    easing: theme.transitions.easing.sharp,
    duration: theme.transitions.duration.enteringScreen,
  }),
  overflowX: 'hidden',
});

const closedMixin = (theme) => ({
  transition: theme.transitions.create('width', {
    easing: theme.transitions.easing.sharp,
    duration: theme.transitions.duration.leavingScreen,
  }),
  overflowX: 'hidden',
  width: `calc(${theme.spacing(7)} + 1px)`,
  [theme.breakpoints.up('sm')]: {
    width: `calc(${theme.spacing(8)} + 1px)`,
  },
});

const DrawerHeader = styled('div')(({ theme }) => ({
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'flex-end',
  padding: theme.spacing(0, 1),
  ...theme.mixins.toolbar,
}));

const AppBar = styled(MuiAppBar, {
  shouldForwardProp: (prop) => prop !== 'open',
})(({ theme }) => ({
  zIndex: theme.zIndex.drawer + 1,
  transition: theme.transitions.create(['width', 'margin'], {
    easing: theme.transitions.easing.sharp,
    duration: theme.transitions.duration.leavingScreen,
  }),
  variants: [
    {
      props: ({ open }) => open,
      style: {
        marginLeft: drawerWidth,
        width: `calc(100% - ${drawerWidth}px)`,
        transition: theme.transitions.create(['width', 'margin'], {
          easing: theme.transitions.easing.sharp,
          duration: theme.transitions.duration.enteringScreen,
        }),
      },
    },
  ],
}));

const Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(
  ({ theme }) => ({
    width: drawerWidth,
    flexShrink: 0,
    whiteSpace: 'nowrap',
    boxSizing: 'border-box',
    variants: [
      {
        props: ({ open }) => open,
        style: {
          ...openedMixin(theme),
          '& .MuiDrawer-paper': openedMixin(theme),
        },
      },
      {
        props: ({ open }) => !open,
        style: {
          ...closedMixin(theme),
          '& .MuiDrawer-paper': closedMixin(theme),
        },
      },
    ],
  }),
);




const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({ children }) {

  const theme = useTheme();
  const isMobile = useMediaQuery(theme.breakpoints.down('sm') && theme.breakpoints.down('md'));

  const [open, setOpen] = React.useState(!isMobile);

  React.useEffect(() => {
    setOpen(!isMobile);
  }, [isMobile]);

  const handleDrawerOpen = () => {
    setOpen(true);
  };

  const handleDrawerClose = () => {
    setOpen(false);
  };


  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Box sx={{ display: 'flex' }}>
          <CssBaseline />
          <AppBar position="fixed" open={open}>
            <Toolbar>
              <IconButton
                color="inherit"
                aria-label="open drawer"
                onClick={handleDrawerOpen}
                edge="start"
                sx={[
                  {
                    marginRight: 5,
                  },
                  open && { display: 'none' },
                ]}
              >
                <MenuIcon />
              </IconButton>
              <Typography variant="h6" noWrap component="div">
                Tushar
              </Typography>
            </Toolbar>
          </AppBar>
          <Drawer variant="permanent" open={open}>
            <DrawerHeader>
              <IconButton onClick={handleDrawerClose}>
                {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}
              </IconButton>
            </DrawerHeader>
            <Divider />

            <Divider />
            <List>
              <ListItem disablePadding sx={{ display: 'block' }}>
                <Link href="/">
                  <ListItemButton
                    sx={[
                      {
                        minHeight: 48,
                        px: 2.5,
                      },
                      open
                        ? {
                          justifyContent: 'initial',
                        }
                        : {
                          justifyContent: 'center',
                        },
                    ]}
                  >
                    <ListItemIcon
                      sx={[
                        {
                          minWidth: 0,
                          justifyContent: 'center',
                        },
                        open
                          ? {
                            mr: 3,
                          }
                          : {
                            mr: 'auto',
                          },
                      ]}
                    >
                      <DashboardIcon />
                    </ListItemIcon>
                    <ListItemText
                      primary={'Dashboard'}
                      sx={[
                        open
                          ? {
                            opacity: 1,
                          }
                          : {
                            opacity: 0,
                          },
                      ]}
                    />
                  </ListItemButton>
                </Link>
              </ListItem>
              <Divider />

              <ListItem disablePadding sx={{ display: 'block', mt: 3 }}>
                <Link href="/addCourse">
                  <ListItemButton
                    sx={[
                      {
                        minHeight: 48,
                        px: 2.5,
                      },
                      open
                        ? {
                          justifyContent: 'initial',
                        }
                        : {
                          justifyContent: 'center',
                        },
                    ]}
                  >
                    <ListItemIcon
                      sx={[
                        {
                          minWidth: 0,
                          justifyContent: 'center',
                        },
                        open
                          ? {
                            mr: 3,
                          }
                          : {
                            mr: 'auto',
                          },
                      ]}
                    >
                      <AddToPhotosIcon />
                    </ListItemIcon>
                    <ListItemText
                      primary={'Add Course'}
                      sx={[
                        open
                          ? {
                            opacity: 1,
                          }
                          : {
                            opacity: 0,
                          },
                      ]}
                    />
                  </ListItemButton>
                </Link>
              </ListItem>

              <ListItem disablePadding sx={{ display: 'block' }}>
                <Link href="/coursesList">
                  <ListItemButton
                    sx={[
                      {
                        minHeight: 48,
                        px: 2.5,
                      },
                      open
                        ? {
                          justifyContent: 'initial',
                        }
                        : {
                          justifyContent: 'center',
                        },
                    ]}
                  >
                    <ListItemIcon
                      sx={[
                        {
                          minWidth: 0,
                          justifyContent: 'center',
                        },
                        open
                          ? {
                            mr: 3,
                          }
                          : {
                            mr: 'auto',
                          },
                      ]}
                    >
                      <ListIcon />
                    </ListItemIcon>
                    <ListItemText
                      primary={'Courses List'}
                      sx={[
                        open
                          ? {
                            opacity: 1,
                          }
                          : {
                            opacity: 0,
                          },
                      ]}
                    />
                  </ListItemButton>
                </Link>
              </ListItem>

              <ListItem disablePadding sx={{ display: 'block' }}>
                <Link href="/categoriesList">
                  <ListItemButton
                    sx={[
                      {
                        minHeight: 48,
                        px: 2.5,
                      },
                      open
                        ? {
                          justifyContent: 'initial',
                        }
                        : {
                          justifyContent: 'center',
                        },
                    ]}
                  >
                    <ListItemIcon
                      sx={[
                        {
                          minWidth: 0,
                          justifyContent: 'center',
                        },
                        open
                          ? {
                            mr: 3,
                          }
                          : {
                            mr: 'auto',
                          },
                      ]}
                    >
                      <CategoryIcon />
                    </ListItemIcon>
                    <ListItemText
                      primary={'Categories List'}
                      sx={[
                        open
                          ? {
                            opacity: 1,
                          }
                          : {
                            opacity: 0,
                          },
                      ]}
                    />
                  </ListItemButton>
                </Link>
              </ListItem>

              <ListItem disablePadding sx={{ display: 'block' }}>
                <Link href="/faqs">
                  <ListItemButton
                    sx={[
                      {
                        minHeight: 48,
                        px: 2.5,
                      },
                      open
                        ? {
                          justifyContent: 'initial',
                        }
                        : {
                          justifyContent: 'center',
                        },
                    ]}
                  >
                    <ListItemIcon
                      sx={[
                        {
                          minWidth: 0,
                          justifyContent: 'center',
                        },
                        open
                          ? {
                            mr: 3,
                          }
                          : {
                            mr: 'auto',
                          },
                      ]}
                    >
                      <LiveHelpIcon />
                    </ListItemIcon>
                    <ListItemText
                      primary={'FAQs List'}
                      sx={[
                        open
                          ? {
                            opacity: 1,
                          }
                          : {
                            opacity: 0,
                          },
                      ]}
                    />
                  </ListItemButton>
                </Link>
              </ListItem>

            </List>
          </Drawer>
          <Box component="main" sx={{ flexGrow: 1, p: 3 }}>
            <DrawerHeader />
            {children}
          </Box>
        </Box>
      </body>
    </html>
  );
}
